
mega328_PWM_kometa.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001c8  00800100  00000b8a  00000c1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b8a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001e  008002c8  008002c8  00000de6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000de6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e18  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000e58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000717  00000000  00000000  00000ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001fb  00000000  00000000  0000160f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d18  00000000  00000000  0000180a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d8  00000000  00000000  00002524  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000325  00000000  00000000  000026fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004a8  00000000  00000000  00002a21  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00002ec9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
   4:	0c 94 8a 05 	jmp	0xb14	; 0xb14 <__vector_1>
   8:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
   c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  10:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  14:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  18:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  1c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  20:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  24:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  28:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  2c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  30:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  34:	0c 94 64 05 	jmp	0xac8	; 0xac8 <__vector_13>
  38:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  3c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  40:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  44:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  48:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  4c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  50:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  54:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  58:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  5c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  60:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  64:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  68:	0e 04       	cpc	r0, r14
  6a:	26 04       	cpc	r2, r6
  6c:	3e 04       	cpc	r3, r14
  6e:	56 04       	cpc	r5, r6
  70:	6e 04       	cpc	r6, r14
  72:	86 04       	cpc	r8, r6
  74:	9e 04       	cpc	r9, r14
  76:	b6 04       	cpc	r11, r6

00000078 <__ctors_end>:
  78:	11 24       	eor	r1, r1
  7a:	1f be       	out	0x3f, r1	; 63
  7c:	cf ef       	ldi	r28, 0xFF	; 255
  7e:	d8 e0       	ldi	r29, 0x08	; 8
  80:	de bf       	out	0x3e, r29	; 62
  82:	cd bf       	out	0x3d, r28	; 61

00000084 <__do_copy_data>:
  84:	12 e0       	ldi	r17, 0x02	; 2
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b1 e0       	ldi	r27, 0x01	; 1
  8a:	ea e8       	ldi	r30, 0x8A	; 138
  8c:	fb e0       	ldi	r31, 0x0B	; 11
  8e:	02 c0       	rjmp	.+4      	; 0x94 <__do_copy_data+0x10>
  90:	05 90       	lpm	r0, Z+
  92:	0d 92       	st	X+, r0
  94:	a8 3c       	cpi	r26, 0xC8	; 200
  96:	b1 07       	cpc	r27, r17
  98:	d9 f7       	brne	.-10     	; 0x90 <__do_copy_data+0xc>

0000009a <__do_clear_bss>:
  9a:	22 e0       	ldi	r18, 0x02	; 2
  9c:	a8 ec       	ldi	r26, 0xC8	; 200
  9e:	b2 e0       	ldi	r27, 0x02	; 2
  a0:	01 c0       	rjmp	.+2      	; 0xa4 <.do_clear_bss_start>

000000a2 <.do_clear_bss_loop>:
  a2:	1d 92       	st	X+, r1

000000a4 <.do_clear_bss_start>:
  a4:	a6 3e       	cpi	r26, 0xE6	; 230
  a6:	b2 07       	cpc	r27, r18
  a8:	e1 f7       	brne	.-8      	; 0xa2 <.do_clear_bss_loop>
  aa:	0e 94 3f 05 	call	0xa7e	; 0xa7e <main>
  ae:	0c 94 c3 05 	jmp	0xb86	; 0xb86 <_exit>

000000b2 <__bad_interrupt>:
  b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b6 <tim0_int>:
	OCR2B = pwm_table[duty2B];
}

void delay_ms(int _speed)
{
	while (_speed--) {
  b6:	8a b1       	in	r24, 0x0a	; 10
  b8:	80 66       	ori	r24, 0x60	; 96
  ba:	8a b9       	out	0x0a, r24	; 10
  bc:	84 b5       	in	r24, 0x24	; 36
  be:	80 6a       	ori	r24, 0xA0	; 160
  c0:	84 bd       	out	0x24, r24	; 36
  c2:	84 b5       	in	r24, 0x24	; 36
  c4:	81 60       	ori	r24, 0x01	; 1
  c6:	84 bd       	out	0x24, r24	; 36
  c8:	85 b5       	in	r24, 0x25	; 37
  ca:	83 60       	ori	r24, 0x03	; 3
  cc:	85 bd       	out	0x25, r24	; 37
  ce:	17 bc       	out	0x27, r1	; 39
  d0:	18 bc       	out	0x28, r1	; 40
  d2:	08 95       	ret

000000d4 <tim1_int>:
  d4:	84 b1       	in	r24, 0x04	; 4
  d6:	86 60       	ori	r24, 0x06	; 6
  d8:	84 b9       	out	0x04, r24	; 4
  da:	e0 e8       	ldi	r30, 0x80	; 128
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	80 6a       	ori	r24, 0xA0	; 160
  e2:	80 83       	st	Z, r24
  e4:	80 81       	ld	r24, Z
  e6:	81 60       	ori	r24, 0x01	; 1
  e8:	80 83       	st	Z, r24
  ea:	e1 e8       	ldi	r30, 0x81	; 129
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	83 60       	ori	r24, 0x03	; 3
  f2:	80 83       	st	Z, r24
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	80 93 6f 00 	sts	0x006F, r24
  fa:	78 94       	sei
  fc:	10 92 89 00 	sts	0x0089, r1
 100:	10 92 88 00 	sts	0x0088, r1
 104:	10 92 8b 00 	sts	0x008B, r1
 108:	10 92 8a 00 	sts	0x008A, r1
 10c:	08 95       	ret

0000010e <tim2_int>:
 10e:	23 9a       	sbi	0x04, 3	; 4
 110:	53 9a       	sbi	0x0a, 3	; 10
 112:	e0 eb       	ldi	r30, 0xB0	; 176
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	80 81       	ld	r24, Z
 118:	80 6a       	ori	r24, 0xA0	; 160
 11a:	80 83       	st	Z, r24
 11c:	80 81       	ld	r24, Z
 11e:	81 60       	ori	r24, 0x01	; 1
 120:	80 83       	st	Z, r24
 122:	e1 eb       	ldi	r30, 0xB1	; 177
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	80 81       	ld	r24, Z
 128:	83 60       	ori	r24, 0x03	; 3
 12a:	80 83       	st	Z, r24
 12c:	10 92 b3 00 	sts	0x00B3, r1
 130:	10 92 b4 00 	sts	0x00B4, r1
 134:	08 95       	ret

00000136 <PWM>:
 136:	ef 92       	push	r14
 138:	0f 93       	push	r16
 13a:	e8 2f       	mov	r30, r24
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	e8 53       	subi	r30, 0x38	; 56
 140:	fe 4f       	sbci	r31, 0xFE	; 254
 142:	80 81       	ld	r24, Z
 144:	87 bd       	out	0x27, r24	; 39
 146:	e6 2f       	mov	r30, r22
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	e8 53       	subi	r30, 0x38	; 56
 14c:	fe 4f       	sbci	r31, 0xFE	; 254
 14e:	80 81       	ld	r24, Z
 150:	88 bd       	out	0x28, r24	; 40
 152:	e4 2f       	mov	r30, r20
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	e8 53       	subi	r30, 0x38	; 56
 158:	fe 4f       	sbci	r31, 0xFE	; 254
 15a:	80 81       	ld	r24, Z
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	90 93 89 00 	sts	0x0089, r25
 162:	80 93 88 00 	sts	0x0088, r24
 166:	e2 2f       	mov	r30, r18
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	e8 53       	subi	r30, 0x38	; 56
 16c:	fe 4f       	sbci	r31, 0xFE	; 254
 16e:	80 81       	ld	r24, Z
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	90 93 8b 00 	sts	0x008B, r25
 176:	80 93 8a 00 	sts	0x008A, r24
 17a:	e0 2f       	mov	r30, r16
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	e8 53       	subi	r30, 0x38	; 56
 180:	fe 4f       	sbci	r31, 0xFE	; 254
 182:	80 81       	ld	r24, Z
 184:	80 93 b3 00 	sts	0x00B3, r24
 188:	ee 2d       	mov	r30, r14
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	e8 53       	subi	r30, 0x38	; 56
 18e:	fe 4f       	sbci	r31, 0xFE	; 254
 190:	80 81       	ld	r24, Z
 192:	80 93 b4 00 	sts	0x00B4, r24
 196:	0f 91       	pop	r16
 198:	ef 90       	pop	r14
 19a:	08 95       	ret

0000019c <kometa_vpred_ON>:
		_delay_us(1000);  // one millisecond
	}
}

void kometa_vpred_ON(){
 19c:	ef 92       	push	r14
 19e:	0f 93       	push	r16
 1a0:	cf 93       	push	r28
	while(vpred_ON == 1)
 1a2:	80 91 d3 02 	lds	r24, 0x02D3
 1a6:	81 30       	cpi	r24, 0x01	; 1
 1a8:	09 f0       	breq	.+2      	; 0x1ac <kometa_vpred_ON+0x10>
 1aa:	52 c0       	rjmp	.+164    	; 0x250 <kometa_vpred_ON+0xb4>
		}
		if (duty2A > 125 && duty2B < 255)
		{duty2B++;
		}
		if (duty2B == 255)
		{vpred_ON = 0;
 1ac:	cf ef       	ldi	r28, 0xFF	; 255
}

void kometa_vpred_ON(){
	while(vpred_ON == 1)
	{
		if (duty0A < 255)
 1ae:	80 91 e3 02 	lds	r24, 0x02E3
 1b2:	8f 3f       	cpi	r24, 0xFF	; 255
 1b4:	29 f0       	breq	.+10     	; 0x1c0 <kometa_vpred_ON+0x24>
		{duty0A++;
 1b6:	8f 5f       	subi	r24, 0xFF	; 255
 1b8:	80 93 e3 02 	sts	0x02E3, r24
		}
		if (duty0A > 125 && duty0B < 255)
 1bc:	8e 37       	cpi	r24, 0x7E	; 126
 1be:	38 f0       	brcs	.+14     	; 0x1ce <kometa_vpred_ON+0x32>
 1c0:	60 91 da 02 	lds	r22, 0x02DA
 1c4:	6f 3f       	cpi	r22, 0xFF	; 255
 1c6:	39 f0       	breq	.+14     	; 0x1d6 <kometa_vpred_ON+0x3a>
		{duty0B++;
 1c8:	6f 5f       	subi	r22, 0xFF	; 255
 1ca:	60 93 da 02 	sts	0x02DA, r22
		}
		if (duty0B > 125 && duty1A < 255)
 1ce:	60 91 da 02 	lds	r22, 0x02DA
 1d2:	6e 37       	cpi	r22, 0x7E	; 126
 1d4:	38 f0       	brcs	.+14     	; 0x1e4 <kometa_vpred_ON+0x48>
 1d6:	40 91 e1 02 	lds	r20, 0x02E1
 1da:	4f 3f       	cpi	r20, 0xFF	; 255
 1dc:	39 f0       	breq	.+14     	; 0x1ec <kometa_vpred_ON+0x50>
		{duty1A++;
 1de:	4f 5f       	subi	r20, 0xFF	; 255
 1e0:	40 93 e1 02 	sts	0x02E1, r20
		}
		if (duty1A > 125 && duty1B < 255)
 1e4:	40 91 e1 02 	lds	r20, 0x02E1
 1e8:	4e 37       	cpi	r20, 0x7E	; 126
 1ea:	38 f0       	brcs	.+14     	; 0x1fa <kometa_vpred_ON+0x5e>
 1ec:	20 91 df 02 	lds	r18, 0x02DF
 1f0:	2f 3f       	cpi	r18, 0xFF	; 255
 1f2:	39 f0       	breq	.+14     	; 0x202 <kometa_vpred_ON+0x66>
		{duty1B++;
 1f4:	2f 5f       	subi	r18, 0xFF	; 255
 1f6:	20 93 df 02 	sts	0x02DF, r18
		}
		if (duty1B > 125 && duty2A < 255)
 1fa:	20 91 df 02 	lds	r18, 0x02DF
 1fe:	2e 37       	cpi	r18, 0x7E	; 126
 200:	38 f0       	brcs	.+14     	; 0x210 <kometa_vpred_ON+0x74>
 202:	00 91 d6 02 	lds	r16, 0x02D6
 206:	0f 3f       	cpi	r16, 0xFF	; 255
 208:	39 f0       	breq	.+14     	; 0x218 <kometa_vpred_ON+0x7c>
		{duty2A++;
 20a:	0f 5f       	subi	r16, 0xFF	; 255
 20c:	00 93 d6 02 	sts	0x02D6, r16
		}
		if (duty2A > 125 && duty2B < 255)
 210:	00 91 d6 02 	lds	r16, 0x02D6
 214:	0e 37       	cpi	r16, 0x7E	; 126
 216:	38 f0       	brcs	.+14     	; 0x226 <kometa_vpred_ON+0x8a>
 218:	90 91 cd 02 	lds	r25, 0x02CD
 21c:	9f 3f       	cpi	r25, 0xFF	; 255
 21e:	41 f0       	breq	.+16     	; 0x230 <kometa_vpred_ON+0x94>
		{duty2B++;
 220:	9f 5f       	subi	r25, 0xFF	; 255
 222:	90 93 cd 02 	sts	0x02CD, r25
		}
		if (duty2B == 255)
 226:	e0 90 cd 02 	lds	r14, 0x02CD
 22a:	9f ef       	ldi	r25, 0xFF	; 255
 22c:	e9 12       	cpse	r14, r25
 22e:	03 c0       	rjmp	.+6      	; 0x236 <kometa_vpred_ON+0x9a>
		{vpred_ON = 0;
 230:	10 92 d3 02 	sts	0x02D3, r1
 234:	ec 2e       	mov	r14, r28
		}
		PWM(duty0A, duty0B, duty1A , duty1B, duty2A, duty2B);
 236:	0e 94 9b 00 	call	0x136	; 0x136 <PWM>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 23a:	8f ec       	ldi	r24, 0xCF	; 207
 23c:	97 e0       	ldi	r25, 0x07	; 7
 23e:	01 97       	sbiw	r24, 0x01	; 1
 240:	f1 f7       	brne	.-4      	; 0x23e <kometa_vpred_ON+0xa2>
 242:	00 c0       	rjmp	.+0      	; 0x244 <kometa_vpred_ON+0xa8>
 244:	00 00       	nop
		_delay_us(1000);  // one millisecond
	}
}

void kometa_vpred_ON(){
	while(vpred_ON == 1)
 246:	80 91 d3 02 	lds	r24, 0x02D3
 24a:	81 30       	cpi	r24, 0x01	; 1
 24c:	09 f4       	brne	.+2      	; 0x250 <kometa_vpred_ON+0xb4>
 24e:	af cf       	rjmp	.-162    	; 0x1ae <kometa_vpred_ON+0x12>
		}
		PWM(duty0A, duty0B, duty1A , duty1B, duty2A, duty2B);
		
		_delay_us(500);
	}
}
 250:	cf 91       	pop	r28
 252:	0f 91       	pop	r16
 254:	ef 90       	pop	r14
 256:	08 95       	ret

00000258 <kometa_vpred_OFF>:

void kometa_vpred_OFF(){
 258:	ef 92       	push	r14
 25a:	0f 93       	push	r16
	while(vpred_OFF == 1)
 25c:	80 91 e4 02 	lds	r24, 0x02E4
 260:	81 30       	cpi	r24, 0x01	; 1
 262:	09 f0       	breq	.+2      	; 0x266 <kometa_vpred_OFF+0xe>
 264:	50 c0       	rjmp	.+160    	; 0x306 <kometa_vpred_OFF+0xae>
	{
		if (duty0A > 0)
 266:	80 91 e3 02 	lds	r24, 0x02E3
 26a:	88 23       	and	r24, r24
 26c:	29 f0       	breq	.+10     	; 0x278 <kometa_vpred_OFF+0x20>
		{duty0A--;
 26e:	81 50       	subi	r24, 0x01	; 1
 270:	80 93 e3 02 	sts	0x02E3, r24
		}
		if (duty0A <= 125 && duty0B > 0)
 274:	8e 37       	cpi	r24, 0x7E	; 126
 276:	38 f4       	brcc	.+14     	; 0x286 <kometa_vpred_OFF+0x2e>
 278:	60 91 da 02 	lds	r22, 0x02DA
 27c:	66 23       	and	r22, r22
 27e:	39 f0       	breq	.+14     	; 0x28e <kometa_vpred_OFF+0x36>
		{duty0B--;
 280:	61 50       	subi	r22, 0x01	; 1
 282:	60 93 da 02 	sts	0x02DA, r22
		}
		if (duty0B <= 125 && duty1A > 0)
 286:	60 91 da 02 	lds	r22, 0x02DA
 28a:	6e 37       	cpi	r22, 0x7E	; 126
 28c:	38 f4       	brcc	.+14     	; 0x29c <kometa_vpred_OFF+0x44>
 28e:	40 91 e1 02 	lds	r20, 0x02E1
 292:	44 23       	and	r20, r20
 294:	39 f0       	breq	.+14     	; 0x2a4 <kometa_vpred_OFF+0x4c>
		{duty1A--;
 296:	41 50       	subi	r20, 0x01	; 1
 298:	40 93 e1 02 	sts	0x02E1, r20
		}
		if (duty1A <= 125 && duty1B > 0)
 29c:	40 91 e1 02 	lds	r20, 0x02E1
 2a0:	4e 37       	cpi	r20, 0x7E	; 126
 2a2:	38 f4       	brcc	.+14     	; 0x2b2 <kometa_vpred_OFF+0x5a>
 2a4:	20 91 df 02 	lds	r18, 0x02DF
 2a8:	22 23       	and	r18, r18
 2aa:	39 f0       	breq	.+14     	; 0x2ba <kometa_vpred_OFF+0x62>
		{duty1B--;
 2ac:	21 50       	subi	r18, 0x01	; 1
 2ae:	20 93 df 02 	sts	0x02DF, r18
		}
		if (duty1B <= 125 && duty2A > 0)
 2b2:	20 91 df 02 	lds	r18, 0x02DF
 2b6:	2e 37       	cpi	r18, 0x7E	; 126
 2b8:	38 f4       	brcc	.+14     	; 0x2c8 <kometa_vpred_OFF+0x70>
 2ba:	00 91 d6 02 	lds	r16, 0x02D6
 2be:	00 23       	and	r16, r16
 2c0:	39 f0       	breq	.+14     	; 0x2d0 <kometa_vpred_OFF+0x78>
		{duty2A--;
 2c2:	01 50       	subi	r16, 0x01	; 1
 2c4:	00 93 d6 02 	sts	0x02D6, r16
		}
		if (duty2A <= 125 && duty2B > 0)
 2c8:	00 91 d6 02 	lds	r16, 0x02D6
 2cc:	0e 37       	cpi	r16, 0x7E	; 126
 2ce:	38 f4       	brcc	.+14     	; 0x2de <kometa_vpred_OFF+0x86>
 2d0:	90 91 cd 02 	lds	r25, 0x02CD
 2d4:	99 23       	and	r25, r25
 2d6:	39 f0       	breq	.+14     	; 0x2e6 <kometa_vpred_OFF+0x8e>
		{duty2B--;
 2d8:	91 50       	subi	r25, 0x01	; 1
 2da:	90 93 cd 02 	sts	0x02CD, r25
		}
		if (duty2B == 0)
 2de:	e0 90 cd 02 	lds	r14, 0x02CD
 2e2:	e1 10       	cpse	r14, r1
 2e4:	03 c0       	rjmp	.+6      	; 0x2ec <kometa_vpred_OFF+0x94>
		{vpred_OFF = 0;
 2e6:	10 92 e4 02 	sts	0x02E4, r1
 2ea:	e1 2c       	mov	r14, r1
		}
		PWM(duty0A, duty0B, duty1A , duty1B, duty2A, duty2B);
 2ec:	0e 94 9b 00 	call	0x136	; 0x136 <PWM>
 2f0:	8f ec       	ldi	r24, 0xCF	; 207
 2f2:	97 e0       	ldi	r25, 0x07	; 7
 2f4:	01 97       	sbiw	r24, 0x01	; 1
 2f6:	f1 f7       	brne	.-4      	; 0x2f4 <kometa_vpred_OFF+0x9c>
 2f8:	00 c0       	rjmp	.+0      	; 0x2fa <kometa_vpred_OFF+0xa2>
 2fa:	00 00       	nop
		_delay_us(500);
	}
}

void kometa_vpred_OFF(){
	while(vpred_OFF == 1)
 2fc:	80 91 e4 02 	lds	r24, 0x02E4
 300:	81 30       	cpi	r24, 0x01	; 1
 302:	09 f4       	brne	.+2      	; 0x306 <kometa_vpred_OFF+0xae>
 304:	b0 cf       	rjmp	.-160    	; 0x266 <kometa_vpred_OFF+0xe>
		{vpred_OFF = 0;
		}
		PWM(duty0A, duty0B, duty1A , duty1B, duty2A, duty2B);
		_delay_us(500);
	}
}
 306:	0f 91       	pop	r16
 308:	ef 90       	pop	r14
 30a:	08 95       	ret

0000030c <kometa_odzadu_ON>:

void kometa_odzadu_ON(){
 30c:	ef 92       	push	r14
 30e:	0f 93       	push	r16
 310:	cf 93       	push	r28
	while(dozadu_ON == 1)
 312:	80 91 e5 02 	lds	r24, 0x02E5
 316:	81 30       	cpi	r24, 0x01	; 1
 318:	09 f0       	breq	.+2      	; 0x31c <kometa_odzadu_ON+0x10>
 31a:	53 c0       	rjmp	.+166    	; 0x3c2 <kometa_odzadu_ON+0xb6>
		}
		if (duty0B > 125 && duty0A < 255)
		{duty0A++;
		}
		if (duty0A == 255)
		{dozadu_ON = 0;
 31c:	cf ef       	ldi	r28, 0xFF	; 255
}

void kometa_odzadu_ON(){
	while(dozadu_ON == 1)
	{
		if (duty2B < 255)
 31e:	e0 90 cd 02 	lds	r14, 0x02CD
 322:	8f ef       	ldi	r24, 0xFF	; 255
 324:	e8 16       	cp	r14, r24
 326:	31 f0       	breq	.+12     	; 0x334 <kometa_odzadu_ON+0x28>
		{duty2B++;
 328:	e3 94       	inc	r14
 32a:	e0 92 cd 02 	sts	0x02CD, r14
		}
		if (duty2B > 125 && duty2A < 255)
 32e:	9d e7       	ldi	r25, 0x7D	; 125
 330:	9e 15       	cp	r25, r14
 332:	38 f4       	brcc	.+14     	; 0x342 <kometa_odzadu_ON+0x36>
 334:	00 91 d6 02 	lds	r16, 0x02D6
 338:	0f 3f       	cpi	r16, 0xFF	; 255
 33a:	39 f0       	breq	.+14     	; 0x34a <kometa_odzadu_ON+0x3e>
		{duty2A++;
 33c:	0f 5f       	subi	r16, 0xFF	; 255
 33e:	00 93 d6 02 	sts	0x02D6, r16
		}
		if (duty2A > 125 && duty1B < 255)
 342:	00 91 d6 02 	lds	r16, 0x02D6
 346:	0e 37       	cpi	r16, 0x7E	; 126
 348:	38 f0       	brcs	.+14     	; 0x358 <kometa_odzadu_ON+0x4c>
 34a:	20 91 df 02 	lds	r18, 0x02DF
 34e:	2f 3f       	cpi	r18, 0xFF	; 255
 350:	39 f0       	breq	.+14     	; 0x360 <kometa_odzadu_ON+0x54>
		{duty1B++;
 352:	2f 5f       	subi	r18, 0xFF	; 255
 354:	20 93 df 02 	sts	0x02DF, r18
		}
		if (duty1B > 125 && duty1A < 255)
 358:	20 91 df 02 	lds	r18, 0x02DF
 35c:	2e 37       	cpi	r18, 0x7E	; 126
 35e:	38 f0       	brcs	.+14     	; 0x36e <kometa_odzadu_ON+0x62>
 360:	40 91 e1 02 	lds	r20, 0x02E1
 364:	4f 3f       	cpi	r20, 0xFF	; 255
 366:	39 f0       	breq	.+14     	; 0x376 <kometa_odzadu_ON+0x6a>
		{duty1A++;
 368:	4f 5f       	subi	r20, 0xFF	; 255
 36a:	40 93 e1 02 	sts	0x02E1, r20
		}
		if (duty1A > 125 && duty0B < 255)
 36e:	40 91 e1 02 	lds	r20, 0x02E1
 372:	4e 37       	cpi	r20, 0x7E	; 126
 374:	38 f0       	brcs	.+14     	; 0x384 <kometa_odzadu_ON+0x78>
 376:	60 91 da 02 	lds	r22, 0x02DA
 37a:	6f 3f       	cpi	r22, 0xFF	; 255
 37c:	39 f0       	breq	.+14     	; 0x38c <kometa_odzadu_ON+0x80>
		{duty0B++;
 37e:	6f 5f       	subi	r22, 0xFF	; 255
 380:	60 93 da 02 	sts	0x02DA, r22
		}
		if (duty0B > 125 && duty0A < 255)
 384:	60 91 da 02 	lds	r22, 0x02DA
 388:	6e 37       	cpi	r22, 0x7E	; 126
 38a:	38 f0       	brcs	.+14     	; 0x39a <kometa_odzadu_ON+0x8e>
 38c:	80 91 e3 02 	lds	r24, 0x02E3
 390:	8f 3f       	cpi	r24, 0xFF	; 255
 392:	39 f0       	breq	.+14     	; 0x3a2 <kometa_odzadu_ON+0x96>
		{duty0A++;
 394:	8f 5f       	subi	r24, 0xFF	; 255
 396:	80 93 e3 02 	sts	0x02E3, r24
		}
		if (duty0A == 255)
 39a:	80 91 e3 02 	lds	r24, 0x02E3
 39e:	8f 3f       	cpi	r24, 0xFF	; 255
 3a0:	19 f4       	brne	.+6      	; 0x3a8 <kometa_odzadu_ON+0x9c>
		{dozadu_ON = 0;
 3a2:	10 92 e5 02 	sts	0x02E5, r1
 3a6:	8c 2f       	mov	r24, r28
		}
		PWM(duty0A, duty0B, duty1A , duty1B, duty2A, duty2B);
 3a8:	0e 94 9b 00 	call	0x136	; 0x136 <PWM>
 3ac:	8f ec       	ldi	r24, 0xCF	; 207
 3ae:	97 e0       	ldi	r25, 0x07	; 7
 3b0:	01 97       	sbiw	r24, 0x01	; 1
 3b2:	f1 f7       	brne	.-4      	; 0x3b0 <kometa_odzadu_ON+0xa4>
 3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <kometa_odzadu_ON+0xaa>
 3b6:	00 00       	nop
		_delay_us(500);
	}
}

void kometa_odzadu_ON(){
	while(dozadu_ON == 1)
 3b8:	80 91 e5 02 	lds	r24, 0x02E5
 3bc:	81 30       	cpi	r24, 0x01	; 1
 3be:	09 f4       	brne	.+2      	; 0x3c2 <kometa_odzadu_ON+0xb6>
 3c0:	ae cf       	rjmp	.-164    	; 0x31e <kometa_odzadu_ON+0x12>
		{dozadu_ON = 0;
		}
		PWM(duty0A, duty0B, duty1A , duty1B, duty2A, duty2B);
		_delay_us(500);
	}
}
 3c2:	cf 91       	pop	r28
 3c4:	0f 91       	pop	r16
 3c6:	ef 90       	pop	r14
 3c8:	08 95       	ret

000003ca <kometa_dozadu_OFF>:

void kometa_dozadu_OFF(){
 3ca:	ef 92       	push	r14
 3cc:	0f 93       	push	r16
	while(dozadu_OFF == 1)
 3ce:	80 91 dd 02 	lds	r24, 0x02DD
 3d2:	81 30       	cpi	r24, 0x01	; 1
 3d4:	09 f0       	breq	.+2      	; 0x3d8 <kometa_dozadu_OFF+0xe>
 3d6:	51 c0       	rjmp	.+162    	; 0x47a <__FUSE_REGION_LENGTH__+0x7a>
	{
		if (duty2B > 0)
 3d8:	e0 90 cd 02 	lds	r14, 0x02CD
 3dc:	ee 20       	and	r14, r14
 3de:	31 f0       	breq	.+12     	; 0x3ec <kometa_dozadu_OFF+0x22>
		{duty2B--;
 3e0:	ea 94       	dec	r14
 3e2:	e0 92 cd 02 	sts	0x02CD, r14
		}
		if (duty2B <= 125 && duty2A > 0)
 3e6:	8d e7       	ldi	r24, 0x7D	; 125
 3e8:	8e 15       	cp	r24, r14
 3ea:	38 f0       	brcs	.+14     	; 0x3fa <kometa_dozadu_OFF+0x30>
 3ec:	00 91 d6 02 	lds	r16, 0x02D6
 3f0:	00 23       	and	r16, r16
 3f2:	39 f0       	breq	.+14     	; 0x402 <__FUSE_REGION_LENGTH__+0x2>
		{duty2A--;
 3f4:	01 50       	subi	r16, 0x01	; 1
 3f6:	00 93 d6 02 	sts	0x02D6, r16
		}
		if (duty2A <= 125 && duty1B > 0)
 3fa:	00 91 d6 02 	lds	r16, 0x02D6
 3fe:	0e 37       	cpi	r16, 0x7E	; 126
 400:	38 f4       	brcc	.+14     	; 0x410 <__FUSE_REGION_LENGTH__+0x10>
 402:	20 91 df 02 	lds	r18, 0x02DF
 406:	22 23       	and	r18, r18
 408:	39 f0       	breq	.+14     	; 0x418 <__FUSE_REGION_LENGTH__+0x18>
		{duty1B--;
 40a:	21 50       	subi	r18, 0x01	; 1
 40c:	20 93 df 02 	sts	0x02DF, r18
		}
		if (duty1B <= 125 && duty1A > 0)
 410:	20 91 df 02 	lds	r18, 0x02DF
 414:	2e 37       	cpi	r18, 0x7E	; 126
 416:	38 f4       	brcc	.+14     	; 0x426 <__FUSE_REGION_LENGTH__+0x26>
 418:	40 91 e1 02 	lds	r20, 0x02E1
 41c:	44 23       	and	r20, r20
 41e:	39 f0       	breq	.+14     	; 0x42e <__FUSE_REGION_LENGTH__+0x2e>
		{duty1A--;
 420:	41 50       	subi	r20, 0x01	; 1
 422:	40 93 e1 02 	sts	0x02E1, r20
		}
		if (duty1A <= 125 && duty0B > 0)
 426:	40 91 e1 02 	lds	r20, 0x02E1
 42a:	4e 37       	cpi	r20, 0x7E	; 126
 42c:	38 f4       	brcc	.+14     	; 0x43c <__FUSE_REGION_LENGTH__+0x3c>
 42e:	60 91 da 02 	lds	r22, 0x02DA
 432:	66 23       	and	r22, r22
 434:	39 f0       	breq	.+14     	; 0x444 <__FUSE_REGION_LENGTH__+0x44>
		{duty0B--;
 436:	61 50       	subi	r22, 0x01	; 1
 438:	60 93 da 02 	sts	0x02DA, r22
		}
		if (duty0B <= 125 && duty0A > 0)
 43c:	60 91 da 02 	lds	r22, 0x02DA
 440:	6e 37       	cpi	r22, 0x7E	; 126
 442:	38 f4       	brcc	.+14     	; 0x452 <__FUSE_REGION_LENGTH__+0x52>
 444:	80 91 e3 02 	lds	r24, 0x02E3
 448:	88 23       	and	r24, r24
 44a:	39 f0       	breq	.+14     	; 0x45a <__FUSE_REGION_LENGTH__+0x5a>
		{duty0A--;
 44c:	81 50       	subi	r24, 0x01	; 1
 44e:	80 93 e3 02 	sts	0x02E3, r24
		}
		if (duty0A == 0)
 452:	80 91 e3 02 	lds	r24, 0x02E3
 456:	81 11       	cpse	r24, r1
 458:	03 c0       	rjmp	.+6      	; 0x460 <__FUSE_REGION_LENGTH__+0x60>
		{dozadu_OFF = 0;
 45a:	10 92 dd 02 	sts	0x02DD, r1
 45e:	80 e0       	ldi	r24, 0x00	; 0
		}
		PWM(duty0A, duty0B, duty1A , duty1B, duty2A, duty2B);
 460:	0e 94 9b 00 	call	0x136	; 0x136 <PWM>
 464:	8f ec       	ldi	r24, 0xCF	; 207
 466:	97 e0       	ldi	r25, 0x07	; 7
 468:	01 97       	sbiw	r24, 0x01	; 1
 46a:	f1 f7       	brne	.-4      	; 0x468 <__FUSE_REGION_LENGTH__+0x68>
 46c:	00 c0       	rjmp	.+0      	; 0x46e <__FUSE_REGION_LENGTH__+0x6e>
 46e:	00 00       	nop
		_delay_us(500);
	}
}

void kometa_dozadu_OFF(){
	while(dozadu_OFF == 1)
 470:	80 91 dd 02 	lds	r24, 0x02DD
 474:	81 30       	cpi	r24, 0x01	; 1
 476:	09 f4       	brne	.+2      	; 0x47a <__FUSE_REGION_LENGTH__+0x7a>
 478:	af cf       	rjmp	.-162    	; 0x3d8 <kometa_dozadu_OFF+0xe>
		{dozadu_OFF = 0;
		}
		PWM(duty0A, duty0B, duty1A , duty1B, duty2A, duty2B);
		_delay_us(500);
	}
}
 47a:	0f 91       	pop	r16
 47c:	ef 90       	pop	r14
 47e:	08 95       	ret

00000480 <kometa_vlna>:

void kometa_vlna(){
 480:	ef 92       	push	r14
 482:	0f 93       	push	r16
 484:	cf 93       	push	r28
 486:	df 93       	push	r29
	while(vlna_ON == 1)
 488:	80 91 d7 02 	lds	r24, 0x02D7
 48c:	81 30       	cpi	r24, 0x01	; 1
 48e:	09 f0       	breq	.+2      	; 0x492 <kometa_vlna+0x12>
 490:	1d c1       	rjmp	.+570    	; 0x6cc <kometa_vlna+0x24c>
	{
//////////// PWM1 ZAP duty0A
		if (PWM1==0)
		{duty0A++;
			if (duty0A == 255)
			{PWM1=1;
 492:	c1 e0       	ldi	r28, 0x01	; 1
}
//////////// PWM1 VYP		
		if (PWM1==1 && duty1A > 125)
		{duty0A--;
			if (duty0A == 0)
			{PWM1=2;
 494:	d2 e0       	ldi	r29, 0x02	; 2

void kometa_vlna(){
	while(vlna_ON == 1)
	{
//////////// PWM1 ZAP duty0A
		if (PWM1==0)
 496:	80 91 e2 02 	lds	r24, 0x02E2
 49a:	81 11       	cpse	r24, r1
 49c:	09 c0       	rjmp	.+18     	; 0x4b0 <kometa_vlna+0x30>
		{duty0A++;
 49e:	80 91 e3 02 	lds	r24, 0x02E3
 4a2:	8f 5f       	subi	r24, 0xFF	; 255
 4a4:	80 93 e3 02 	sts	0x02E3, r24
			if (duty0A == 255)
 4a8:	8f 3f       	cpi	r24, 0xFF	; 255
 4aa:	11 f4       	brne	.+4      	; 0x4b0 <kometa_vlna+0x30>
			{PWM1=1;
 4ac:	c0 93 e2 02 	sts	0x02E2, r28
			}
		} 
//////////// PWM2 ZAP duty0B					
		if (PWM2==0 && duty0A > 125)
 4b0:	80 91 d5 02 	lds	r24, 0x02D5
 4b4:	81 11       	cpse	r24, r1
 4b6:	0d c0       	rjmp	.+26     	; 0x4d2 <kometa_vlna+0x52>
 4b8:	80 91 e3 02 	lds	r24, 0x02E3
 4bc:	8e 37       	cpi	r24, 0x7E	; 126
 4be:	48 f0       	brcs	.+18     	; 0x4d2 <kometa_vlna+0x52>
		{duty0B++;
 4c0:	80 91 da 02 	lds	r24, 0x02DA
 4c4:	8f 5f       	subi	r24, 0xFF	; 255
 4c6:	80 93 da 02 	sts	0x02DA, r24
			if (duty0B == 255)
 4ca:	8f 3f       	cpi	r24, 0xFF	; 255
 4cc:	11 f4       	brne	.+4      	; 0x4d2 <kometa_vlna+0x52>
			{PWM2=1;
 4ce:	c0 93 d5 02 	sts	0x02D5, r28
			}
		}
//////////// PWM3 ZAP duty1A		
		if (PWM3==0 && duty0B > 125)
 4d2:	80 91 db 02 	lds	r24, 0x02DB
 4d6:	81 11       	cpse	r24, r1
 4d8:	0d c0       	rjmp	.+26     	; 0x4f4 <kometa_vlna+0x74>
 4da:	80 91 da 02 	lds	r24, 0x02DA
 4de:	8e 37       	cpi	r24, 0x7E	; 126
 4e0:	48 f0       	brcs	.+18     	; 0x4f4 <kometa_vlna+0x74>
		{duty1A++;
 4e2:	80 91 e1 02 	lds	r24, 0x02E1
 4e6:	8f 5f       	subi	r24, 0xFF	; 255
 4e8:	80 93 e1 02 	sts	0x02E1, r24
			if (duty1A == 255)
 4ec:	8f 3f       	cpi	r24, 0xFF	; 255
 4ee:	11 f4       	brne	.+4      	; 0x4f4 <kometa_vlna+0x74>
			{PWM3=1;
 4f0:	c0 93 db 02 	sts	0x02DB, r28
			}
		}
//////////// PWM4 ZAP duty1B
if (PWM4==0 && duty1A > 125)
 4f4:	80 91 d8 02 	lds	r24, 0x02D8
 4f8:	81 11       	cpse	r24, r1
 4fa:	0d c0       	rjmp	.+26     	; 0x516 <kometa_vlna+0x96>
 4fc:	80 91 e1 02 	lds	r24, 0x02E1
 500:	8e 37       	cpi	r24, 0x7E	; 126
 502:	48 f0       	brcs	.+18     	; 0x516 <kometa_vlna+0x96>
{duty1B++;
 504:	80 91 df 02 	lds	r24, 0x02DF
 508:	8f 5f       	subi	r24, 0xFF	; 255
 50a:	80 93 df 02 	sts	0x02DF, r24
	if (duty1B == 255)
 50e:	8f 3f       	cpi	r24, 0xFF	; 255
 510:	11 f4       	brne	.+4      	; 0x516 <kometa_vlna+0x96>
	{PWM4=1;
 512:	c0 93 d8 02 	sts	0x02D8, r28
	}
}
//////////// PWM5 ZAP duty2A
if (PWM5==0 && duty1B > 125)
 516:	80 91 e0 02 	lds	r24, 0x02E0
 51a:	81 11       	cpse	r24, r1
 51c:	0d c0       	rjmp	.+26     	; 0x538 <kometa_vlna+0xb8>
 51e:	80 91 df 02 	lds	r24, 0x02DF
 522:	8e 37       	cpi	r24, 0x7E	; 126
 524:	48 f0       	brcs	.+18     	; 0x538 <kometa_vlna+0xb8>
{duty2A++;
 526:	80 91 d6 02 	lds	r24, 0x02D6
 52a:	8f 5f       	subi	r24, 0xFF	; 255
 52c:	80 93 d6 02 	sts	0x02D6, r24
	if (duty2A == 255)
 530:	8f 3f       	cpi	r24, 0xFF	; 255
 532:	11 f4       	brne	.+4      	; 0x538 <kometa_vlna+0xb8>
	{PWM5=1;
 534:	c0 93 e0 02 	sts	0x02E0, r28
	}
}
//////////// PWM6 ZAP duty2B
if (PWM6==0 && duty2A > 125)
 538:	80 91 de 02 	lds	r24, 0x02DE
 53c:	81 11       	cpse	r24, r1
 53e:	0d c0       	rjmp	.+26     	; 0x55a <kometa_vlna+0xda>
 540:	80 91 d6 02 	lds	r24, 0x02D6
 544:	8e 37       	cpi	r24, 0x7E	; 126
 546:	48 f0       	brcs	.+18     	; 0x55a <kometa_vlna+0xda>
{duty2B++;
 548:	80 91 cd 02 	lds	r24, 0x02CD
 54c:	8f 5f       	subi	r24, 0xFF	; 255
 54e:	80 93 cd 02 	sts	0x02CD, r24
	if (duty2B == 255)
 552:	8f 3f       	cpi	r24, 0xFF	; 255
 554:	11 f4       	brne	.+4      	; 0x55a <kometa_vlna+0xda>
	{PWM6=1;
 556:	c0 93 de 02 	sts	0x02DE, r28
	}
}
//////////// PWMXA ZAP
if (PWMXA==0 && duty2B > 125)
 55a:	80 91 d1 02 	lds	r24, 0x02D1
 55e:	81 11       	cpse	r24, r1
 560:	0d c0       	rjmp	.+26     	; 0x57c <kometa_vlna+0xfc>
 562:	80 91 cd 02 	lds	r24, 0x02CD
 566:	8e 37       	cpi	r24, 0x7E	; 126
 568:	48 f0       	brcs	.+18     	; 0x57c <kometa_vlna+0xfc>
{XA++;
 56a:	80 91 dc 02 	lds	r24, 0x02DC
 56e:	8f 5f       	subi	r24, 0xFF	; 255
 570:	80 93 dc 02 	sts	0x02DC, r24
	if (XA == 255)
 574:	8f 3f       	cpi	r24, 0xFF	; 255
 576:	11 f4       	brne	.+4      	; 0x57c <kometa_vlna+0xfc>
	{PWMXA=1;
 578:	c0 93 d1 02 	sts	0x02D1, r28
	}
}
//////////// PWMXB ZAP
if (PWMXB==0 && XA > 125)
 57c:	80 91 ce 02 	lds	r24, 0x02CE
 580:	81 11       	cpse	r24, r1
 582:	0d c0       	rjmp	.+26     	; 0x59e <kometa_vlna+0x11e>
 584:	80 91 dc 02 	lds	r24, 0x02DC
 588:	8e 37       	cpi	r24, 0x7E	; 126
 58a:	48 f0       	brcs	.+18     	; 0x59e <kometa_vlna+0x11e>
{XB++;
 58c:	80 91 cf 02 	lds	r24, 0x02CF
 590:	8f 5f       	subi	r24, 0xFF	; 255
 592:	80 93 cf 02 	sts	0x02CF, r24
	if (XB == 255)
 596:	8f 3f       	cpi	r24, 0xFF	; 255
 598:	11 f4       	brne	.+4      	; 0x59e <kometa_vlna+0x11e>
	{PWMXB=1;
 59a:	c0 93 ce 02 	sts	0x02CE, r28
	}
}
//////////// PWM1 VYP		
		if (PWM1==1 && duty1A > 125)
 59e:	80 91 e2 02 	lds	r24, 0x02E2
 5a2:	81 30       	cpi	r24, 0x01	; 1
 5a4:	69 f4       	brne	.+26     	; 0x5c0 <kometa_vlna+0x140>
 5a6:	80 91 e1 02 	lds	r24, 0x02E1
 5aa:	8e 37       	cpi	r24, 0x7E	; 126
 5ac:	48 f0       	brcs	.+18     	; 0x5c0 <kometa_vlna+0x140>
		{duty0A--;
 5ae:	80 91 e3 02 	lds	r24, 0x02E3
 5b2:	81 50       	subi	r24, 0x01	; 1
 5b4:	80 93 e3 02 	sts	0x02E3, r24
			if (duty0A == 0)
 5b8:	81 11       	cpse	r24, r1
 5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <kometa_vlna+0x140>
			{PWM1=2;
 5bc:	d0 93 e2 02 	sts	0x02E2, r29
			}
		}
//////////// PWM2 VYP
if (PWM2==1 && duty1B > 125)
 5c0:	80 91 d5 02 	lds	r24, 0x02D5
 5c4:	81 30       	cpi	r24, 0x01	; 1
 5c6:	69 f4       	brne	.+26     	; 0x5e2 <kometa_vlna+0x162>
 5c8:	80 91 df 02 	lds	r24, 0x02DF
 5cc:	8e 37       	cpi	r24, 0x7E	; 126
 5ce:	48 f0       	brcs	.+18     	; 0x5e2 <kometa_vlna+0x162>
{duty0B--;
 5d0:	80 91 da 02 	lds	r24, 0x02DA
 5d4:	81 50       	subi	r24, 0x01	; 1
 5d6:	80 93 da 02 	sts	0x02DA, r24
	if (duty0B == 0)
 5da:	81 11       	cpse	r24, r1
 5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <kometa_vlna+0x162>
	{PWM2=2;
 5de:	d0 93 d5 02 	sts	0x02D5, r29
	}
}
//////////// PWM3 VYP
if (PWM3==1 && duty2A > 125)
 5e2:	80 91 db 02 	lds	r24, 0x02DB
 5e6:	81 30       	cpi	r24, 0x01	; 1
 5e8:	69 f4       	brne	.+26     	; 0x604 <kometa_vlna+0x184>
 5ea:	80 91 d6 02 	lds	r24, 0x02D6
 5ee:	8e 37       	cpi	r24, 0x7E	; 126
 5f0:	48 f0       	brcs	.+18     	; 0x604 <kometa_vlna+0x184>
{duty1A--;
 5f2:	80 91 e1 02 	lds	r24, 0x02E1
 5f6:	81 50       	subi	r24, 0x01	; 1
 5f8:	80 93 e1 02 	sts	0x02E1, r24
	if (duty1A == 0)
 5fc:	81 11       	cpse	r24, r1
 5fe:	02 c0       	rjmp	.+4      	; 0x604 <kometa_vlna+0x184>
	{PWM3=2;
 600:	d0 93 db 02 	sts	0x02DB, r29
	}
}
/////////// PWM4 VYP
if (PWM4==1 && duty2B > 125)
 604:	80 91 d8 02 	lds	r24, 0x02D8
 608:	81 30       	cpi	r24, 0x01	; 1
 60a:	69 f4       	brne	.+26     	; 0x626 <kometa_vlna+0x1a6>
 60c:	80 91 cd 02 	lds	r24, 0x02CD
 610:	8e 37       	cpi	r24, 0x7E	; 126
 612:	48 f0       	brcs	.+18     	; 0x626 <kometa_vlna+0x1a6>
{duty1B--;
 614:	80 91 df 02 	lds	r24, 0x02DF
 618:	81 50       	subi	r24, 0x01	; 1
 61a:	80 93 df 02 	sts	0x02DF, r24
	if (duty1B == 0)
 61e:	81 11       	cpse	r24, r1
 620:	02 c0       	rjmp	.+4      	; 0x626 <kometa_vlna+0x1a6>
	{PWM4=2;
 622:	d0 93 d8 02 	sts	0x02D8, r29
	}
}
/////////// PWM5 VYP
if (PWM5==1 && XA > 125)
 626:	80 91 e0 02 	lds	r24, 0x02E0
 62a:	81 30       	cpi	r24, 0x01	; 1
 62c:	69 f4       	brne	.+26     	; 0x648 <kometa_vlna+0x1c8>
 62e:	80 91 dc 02 	lds	r24, 0x02DC
 632:	8e 37       	cpi	r24, 0x7E	; 126
 634:	48 f0       	brcs	.+18     	; 0x648 <kometa_vlna+0x1c8>
{duty2A--;
 636:	80 91 d6 02 	lds	r24, 0x02D6
 63a:	81 50       	subi	r24, 0x01	; 1
 63c:	80 93 d6 02 	sts	0x02D6, r24
	if (duty2A == 0)
 640:	81 11       	cpse	r24, r1
 642:	02 c0       	rjmp	.+4      	; 0x648 <kometa_vlna+0x1c8>
	{PWM5=2;
 644:	d0 93 e0 02 	sts	0x02E0, r29
	}
}
/////////// PWM6 VYP
if (PWM6==1 && XB > 125)
 648:	80 91 de 02 	lds	r24, 0x02DE
 64c:	81 30       	cpi	r24, 0x01	; 1
 64e:	59 f4       	brne	.+22     	; 0x666 <kometa_vlna+0x1e6>
 650:	80 91 cf 02 	lds	r24, 0x02CF
 654:	8e 37       	cpi	r24, 0x7E	; 126
 656:	08 f1       	brcs	.+66     	; 0x69a <kometa_vlna+0x21a>
{duty2B--;
 658:	80 91 cd 02 	lds	r24, 0x02CD
 65c:	81 50       	subi	r24, 0x01	; 1
 65e:	80 93 cd 02 	sts	0x02CD, r24
	if (duty2B == 0)
 662:	88 23       	and	r24, r24
 664:	21 f0       	breq	.+8      	; 0x66e <kometa_vlna+0x1ee>
	{PWM6=2;
	}
}
		if (PWM6==2)
 666:	80 91 de 02 	lds	r24, 0x02DE
 66a:	82 30       	cpi	r24, 0x02	; 2
 66c:	b1 f4       	brne	.+44     	; 0x69a <kometa_vlna+0x21a>
		{vlna_ON = 0;
 66e:	10 92 d7 02 	sts	0x02D7, r1
			XA=0;
 672:	10 92 dc 02 	sts	0x02DC, r1
			XB=0;
 676:	10 92 cf 02 	sts	0x02CF, r1
			PWM1 = 0;
 67a:	10 92 e2 02 	sts	0x02E2, r1
			PWM2 = 0;
 67e:	10 92 d5 02 	sts	0x02D5, r1
			PWM3 = 0;
 682:	10 92 db 02 	sts	0x02DB, r1
			PWM4 = 0;
 686:	10 92 d8 02 	sts	0x02D8, r1
			PWM5 = 0;
 68a:	10 92 e0 02 	sts	0x02E0, r1
			PWM6 = 0;
 68e:	10 92 de 02 	sts	0x02DE, r1
			PWMXA = 0;
 692:	10 92 d1 02 	sts	0x02D1, r1
			PWMXB = 0;
 696:	10 92 ce 02 	sts	0x02CE, r1
			//kom_ispeed = 0; // cca 6s
		}
		PWM(duty0A, duty0B, duty1A , duty1B, duty2A, duty2B);
 69a:	e0 90 cd 02 	lds	r14, 0x02CD
 69e:	00 91 d6 02 	lds	r16, 0x02D6
 6a2:	20 91 df 02 	lds	r18, 0x02DF
 6a6:	40 91 e1 02 	lds	r20, 0x02E1
 6aa:	60 91 da 02 	lds	r22, 0x02DA
 6ae:	80 91 e3 02 	lds	r24, 0x02E3
 6b2:	0e 94 9b 00 	call	0x136	; 0x136 <PWM>
 6b6:	87 eb       	ldi	r24, 0xB7	; 183
 6b8:	9b e0       	ldi	r25, 0x0B	; 11
 6ba:	01 97       	sbiw	r24, 0x01	; 1
 6bc:	f1 f7       	brne	.-4      	; 0x6ba <kometa_vlna+0x23a>
 6be:	00 c0       	rjmp	.+0      	; 0x6c0 <kometa_vlna+0x240>
 6c0:	00 00       	nop
		_delay_us(500);
	}
}

void kometa_vlna(){
	while(vlna_ON == 1)
 6c2:	80 91 d7 02 	lds	r24, 0x02D7
 6c6:	81 30       	cpi	r24, 0x01	; 1
 6c8:	09 f4       	brne	.+2      	; 0x6cc <kometa_vlna+0x24c>
 6ca:	e5 ce       	rjmp	.-566    	; 0x496 <kometa_vlna+0x16>
			//kom_ispeed = 0; // cca 6s
		}
		PWM(duty0A, duty0B, duty1A , duty1B, duty2A, duty2B);
		_delay_us(750);
	}
}
 6cc:	df 91       	pop	r29
 6ce:	cf 91       	pop	r28
 6d0:	0f 91       	pop	r16
 6d2:	ef 90       	pop	r14
 6d4:	08 95       	ret

000006d6 <kometa_trvale_ON>:

void kometa_trvale_ON(){
	while(kometa_ON == 1)
 6d6:	80 91 d4 02 	lds	r24, 0x02D4
 6da:	81 30       	cpi	r24, 0x01	; 1
 6dc:	99 f4       	brne	.+38     	; 0x704 <kometa_trvale_ON+0x2e>
	{
		OCR0A = 255;
 6de:	8f ef       	ldi	r24, 0xFF	; 255
 6e0:	87 bd       	out	0x27, r24	; 39
		OCR0B = 255;
 6e2:	88 bd       	out	0x28, r24	; 40
		OCR1A = 255;
 6e4:	2f ef       	ldi	r18, 0xFF	; 255
 6e6:	30 e0       	ldi	r19, 0x00	; 0
 6e8:	30 93 89 00 	sts	0x0089, r19
 6ec:	20 93 88 00 	sts	0x0088, r18
		OCR1B = 255;
 6f0:	30 93 8b 00 	sts	0x008B, r19
 6f4:	20 93 8a 00 	sts	0x008A, r18
		OCR2A = 255;
 6f8:	80 93 b3 00 	sts	0x00B3, r24
		OCR2B = 255;
 6fc:	80 93 b4 00 	sts	0x00B4, r24
		kometa_ON = 0;
 700:	10 92 d4 02 	sts	0x02D4, r1
 704:	08 95       	ret

00000706 <kometa_trvale_OFF>:
	}
}

void kometa_trvale_OFF(){
	while(kometa_OFF == 1)
 706:	80 91 d0 02 	lds	r24, 0x02D0
 70a:	81 30       	cpi	r24, 0x01	; 1
 70c:	81 f4       	brne	.+32     	; 0x72e <kometa_trvale_OFF+0x28>
	{
		OCR0A = 0;
 70e:	17 bc       	out	0x27, r1	; 39
		OCR0B = 0;
 710:	18 bc       	out	0x28, r1	; 40
		OCR1A = 0;
 712:	10 92 89 00 	sts	0x0089, r1
 716:	10 92 88 00 	sts	0x0088, r1
		OCR1B = 0;
 71a:	10 92 8b 00 	sts	0x008B, r1
 71e:	10 92 8a 00 	sts	0x008A, r1
		OCR2A = 0;
 722:	10 92 b3 00 	sts	0x00B3, r1
		OCR2B = 0;
 726:	10 92 b4 00 	sts	0x00B4, r1
		kometa_OFF = 0;
 72a:	10 92 d0 02 	sts	0x02D0, r1
 72e:	08 95       	ret

00000730 <effekt>:
	}
}

void effekt(){
	
	if (kometa_count == kometa_speed[kom_ispeed])
 730:	e0 91 cc 02 	lds	r30, 0x02CC
 734:	f0 e0       	ldi	r31, 0x00	; 0
 736:	ee 0f       	add	r30, r30
 738:	ff 1f       	adc	r31, r31
 73a:	e0 50       	subi	r30, 0x00	; 0
 73c:	ff 4f       	sbci	r31, 0xFF	; 255
 73e:	20 81       	ld	r18, Z
 740:	31 81       	ldd	r19, Z+1	; 0x01
 742:	80 91 c8 02 	lds	r24, 0x02C8
 746:	90 91 c9 02 	lds	r25, 0x02C9
 74a:	28 17       	cp	r18, r24
 74c:	39 07       	cpc	r19, r25
 74e:	09 f0       	breq	.+2      	; 0x752 <effekt+0x22>
 750:	53 c1       	rjmp	.+678    	; 0x9f8 <__stack+0xf9>
	{
		cli();
 752:	f8 94       	cli
	
		if (selection == 0 ) //0 - vlna
 754:	80 91 d9 02 	lds	r24, 0x02D9
 758:	81 11       	cpse	r24, r1
 75a:	15 c0       	rjmp	.+42     	; 0x786 <effekt+0x56>
		{
			vpred_ON = 0;
 75c:	10 92 d3 02 	sts	0x02D3, r1
			vpred_OFF = 0;
 760:	10 92 e4 02 	sts	0x02E4, r1
			dozadu_ON = 0;
 764:	10 92 e5 02 	sts	0x02E5, r1
			dozadu_OFF = 0;
 768:	10 92 dd 02 	sts	0x02DD, r1
			kometa_ON = 0;
 76c:	10 92 d4 02 	sts	0x02D4, r1
			kometa_OFF = 0;
 770:	10 92 d0 02 	sts	0x02D0, r1
			kom_ispeed++;
 774:	90 91 cc 02 	lds	r25, 0x02CC
 778:	9f 5f       	subi	r25, 0xFF	; 255
 77a:	90 93 cc 02 	sts	0x02CC, r25
			vlna_ON = 1;
 77e:	91 e0       	ldi	r25, 0x01	; 1
 780:	90 93 d7 02 	sts	0x02D7, r25
 784:	0b c1       	rjmp	.+534    	; 0x99c <__stack+0x9d>
		}
		
		if (selection == 1 ) //1 - efekt zapina sa vpred vypina sa vpred
 786:	81 30       	cpi	r24, 0x01	; 1
 788:	b9 f5       	brne	.+110    	; 0x7f8 <effekt+0xc8>
		{
			switch (change)
 78a:	90 91 d2 02 	lds	r25, 0x02D2
 78e:	91 34       	cpi	r25, 0x41	; 65
 790:	19 f0       	breq	.+6      	; 0x798 <effekt+0x68>
 792:	92 34       	cpi	r25, 0x42	; 66
 794:	c9 f0       	breq	.+50     	; 0x7c8 <effekt+0x98>
 796:	30 c0       	rjmp	.+96     	; 0x7f8 <effekt+0xc8>
			{
				case 'A':
				vpred_ON = 1;
 798:	91 e0       	ldi	r25, 0x01	; 1
 79a:	90 93 d3 02 	sts	0x02D3, r25
				vpred_OFF = 0;
 79e:	10 92 e4 02 	sts	0x02E4, r1
				dozadu_ON = 0;
 7a2:	10 92 e5 02 	sts	0x02E5, r1
				dozadu_OFF = 0;
 7a6:	10 92 dd 02 	sts	0x02DD, r1
				kometa_ON = 0;
 7aa:	10 92 d4 02 	sts	0x02D4, r1
				kometa_OFF = 0;
 7ae:	10 92 d0 02 	sts	0x02D0, r1
				vlna_ON = 0;
 7b2:	10 92 d7 02 	sts	0x02D7, r1
				change = 'B';
 7b6:	92 e4       	ldi	r25, 0x42	; 66
 7b8:	90 93 d2 02 	sts	0x02D2, r25
				kom_ispeed++;
 7bc:	90 91 cc 02 	lds	r25, 0x02CC
 7c0:	9f 5f       	subi	r25, 0xFF	; 255
 7c2:	90 93 cc 02 	sts	0x02CC, r25
				break;
 7c6:	fc c0       	rjmp	.+504    	; 0x9c0 <__stack+0xc1>
				
				case 'B':
				vpred_ON = 0;
 7c8:	10 92 d3 02 	sts	0x02D3, r1
				vpred_OFF = 1;
 7cc:	91 e0       	ldi	r25, 0x01	; 1
 7ce:	90 93 e4 02 	sts	0x02E4, r25
				dozadu_ON = 0;
 7d2:	10 92 e5 02 	sts	0x02E5, r1
				dozadu_OFF = 0;
 7d6:	10 92 dd 02 	sts	0x02DD, r1
				kometa_ON = 0;
 7da:	10 92 d4 02 	sts	0x02D4, r1
				kometa_OFF = 0;
 7de:	10 92 d0 02 	sts	0x02D0, r1
				vlna_ON = 0;
 7e2:	10 92 d7 02 	sts	0x02D7, r1
				change = 'A';
 7e6:	91 e4       	ldi	r25, 0x41	; 65
 7e8:	90 93 d2 02 	sts	0x02D2, r25
				kom_ispeed++;
 7ec:	90 91 cc 02 	lds	r25, 0x02CC
 7f0:	9f 5f       	subi	r25, 0xFF	; 255
 7f2:	90 93 cc 02 	sts	0x02CC, r25
				break;
 7f6:	e4 c0       	rjmp	.+456    	; 0x9c0 <__stack+0xc1>
			}
		}
		
		if (selection == 2 ) //2 - strieda sa ekeft
 7f8:	82 30       	cpi	r24, 0x02	; 2
 7fa:	09 f0       	breq	.+2      	; 0x7fe <effekt+0xce>
 7fc:	cf c0       	rjmp	.+414    	; 0x99c <__stack+0x9d>
		{
			switch (change)
 7fe:	e0 91 d2 02 	lds	r30, 0x02D2
 802:	4e 2f       	mov	r20, r30
 804:	50 e0       	ldi	r21, 0x00	; 0
 806:	fa 01       	movw	r30, r20
 808:	e1 54       	subi	r30, 0x41	; 65
 80a:	f1 09       	sbc	r31, r1
 80c:	e8 30       	cpi	r30, 0x08	; 8
 80e:	f1 05       	cpc	r31, r1
 810:	08 f0       	brcs	.+2      	; 0x814 <effekt+0xe4>
 812:	c4 c0       	rjmp	.+392    	; 0x99c <__stack+0x9d>
 814:	ec 5c       	subi	r30, 0xCC	; 204
 816:	ff 4f       	sbci	r31, 0xFF	; 255
 818:	0c 94 bd 05 	jmp	0xb7a	; 0xb7a <__tablejump2__>
			{
				case 'A':
				vpred_ON = 1;
 81c:	81 e0       	ldi	r24, 0x01	; 1
 81e:	80 93 d3 02 	sts	0x02D3, r24
				vpred_OFF = 0;
 822:	10 92 e4 02 	sts	0x02E4, r1
				dozadu_ON = 0;
 826:	10 92 e5 02 	sts	0x02E5, r1
				dozadu_OFF = 0;
 82a:	10 92 dd 02 	sts	0x02DD, r1
				kometa_ON = 0;
 82e:	10 92 d4 02 	sts	0x02D4, r1
				kometa_OFF = 0;
 832:	10 92 d0 02 	sts	0x02D0, r1
				vlna_ON = 0;
 836:	10 92 d7 02 	sts	0x02D7, r1
				change = 'B';
 83a:	82 e4       	ldi	r24, 0x42	; 66
 83c:	80 93 d2 02 	sts	0x02D2, r24
				kom_ispeed++;
 840:	80 91 cc 02 	lds	r24, 0x02CC
 844:	8f 5f       	subi	r24, 0xFF	; 255
 846:	80 93 cc 02 	sts	0x02CC, r24
				break;
 84a:	cb c0       	rjmp	.+406    	; 0x9e2 <__stack+0xe3>
				
				case 'B':
				vpred_ON = 0;
 84c:	10 92 d3 02 	sts	0x02D3, r1
				vpred_OFF = 1;
 850:	81 e0       	ldi	r24, 0x01	; 1
 852:	80 93 e4 02 	sts	0x02E4, r24
				dozadu_ON = 0;
 856:	10 92 e5 02 	sts	0x02E5, r1
				dozadu_OFF = 0;
 85a:	10 92 dd 02 	sts	0x02DD, r1
				kometa_ON = 0;
 85e:	10 92 d4 02 	sts	0x02D4, r1
				kometa_OFF = 0;
 862:	10 92 d0 02 	sts	0x02D0, r1
				vlna_ON = 0;
 866:	10 92 d7 02 	sts	0x02D7, r1
				change = 'C';
 86a:	83 e4       	ldi	r24, 0x43	; 67
 86c:	80 93 d2 02 	sts	0x02D2, r24
				kom_ispeed++;
 870:	80 91 cc 02 	lds	r24, 0x02CC
 874:	8f 5f       	subi	r24, 0xFF	; 255
 876:	80 93 cc 02 	sts	0x02CC, r24
				break;
 87a:	b3 c0       	rjmp	.+358    	; 0x9e2 <__stack+0xe3>

				case 'C':
				vpred_ON = 0;
 87c:	10 92 d3 02 	sts	0x02D3, r1
				vpred_OFF = 0;
 880:	10 92 e4 02 	sts	0x02E4, r1
				dozadu_ON = 1;
 884:	81 e0       	ldi	r24, 0x01	; 1
 886:	80 93 e5 02 	sts	0x02E5, r24
				dozadu_OFF = 0;
 88a:	10 92 dd 02 	sts	0x02DD, r1
				kometa_ON = 0;
 88e:	10 92 d4 02 	sts	0x02D4, r1
				kometa_OFF = 0;
 892:	10 92 d0 02 	sts	0x02D0, r1
				vlna_ON = 0;
 896:	10 92 d7 02 	sts	0x02D7, r1
				change = 'D';
 89a:	84 e4       	ldi	r24, 0x44	; 68
 89c:	80 93 d2 02 	sts	0x02D2, r24
				kom_ispeed++;
 8a0:	80 91 cc 02 	lds	r24, 0x02CC
 8a4:	8f 5f       	subi	r24, 0xFF	; 255
 8a6:	80 93 cc 02 	sts	0x02CC, r24
				break;
 8aa:	9b c0       	rjmp	.+310    	; 0x9e2 <__stack+0xe3>

				case 'D':
				vpred_ON = 0;
 8ac:	10 92 d3 02 	sts	0x02D3, r1
				vpred_OFF = 0;
 8b0:	10 92 e4 02 	sts	0x02E4, r1
				dozadu_ON = 0;
 8b4:	10 92 e5 02 	sts	0x02E5, r1
				dozadu_OFF = 1;
 8b8:	81 e0       	ldi	r24, 0x01	; 1
 8ba:	80 93 dd 02 	sts	0x02DD, r24
				kometa_ON = 0;
 8be:	10 92 d4 02 	sts	0x02D4, r1
				kometa_OFF = 0;
 8c2:	10 92 d0 02 	sts	0x02D0, r1
				vlna_ON = 0;
 8c6:	10 92 d7 02 	sts	0x02D7, r1
				change = 'E';
 8ca:	85 e4       	ldi	r24, 0x45	; 69
 8cc:	80 93 d2 02 	sts	0x02D2, r24
				kom_ispeed++;
 8d0:	80 91 cc 02 	lds	r24, 0x02CC
 8d4:	8f 5f       	subi	r24, 0xFF	; 255
 8d6:	80 93 cc 02 	sts	0x02CC, r24
				break;
 8da:	83 c0       	rjmp	.+262    	; 0x9e2 <__stack+0xe3>
				
				case 'E':
				vpred_ON = 1;
 8dc:	81 e0       	ldi	r24, 0x01	; 1
 8de:	80 93 d3 02 	sts	0x02D3, r24
				vpred_OFF = 0;
 8e2:	10 92 e4 02 	sts	0x02E4, r1
				dozadu_ON = 0;
 8e6:	10 92 e5 02 	sts	0x02E5, r1
				dozadu_OFF = 0;
 8ea:	10 92 dd 02 	sts	0x02DD, r1
				kometa_ON = 0;
 8ee:	10 92 d4 02 	sts	0x02D4, r1
				kometa_OFF = 0;
 8f2:	10 92 d0 02 	sts	0x02D0, r1
				vlna_ON = 0;
 8f6:	10 92 d7 02 	sts	0x02D7, r1
				change = 'F';
 8fa:	86 e4       	ldi	r24, 0x46	; 70
 8fc:	80 93 d2 02 	sts	0x02D2, r24
				kom_ispeed++;
 900:	80 91 cc 02 	lds	r24, 0x02CC
 904:	8f 5f       	subi	r24, 0xFF	; 255
 906:	80 93 cc 02 	sts	0x02CC, r24
				break;
 90a:	6b c0       	rjmp	.+214    	; 0x9e2 <__stack+0xe3>
				
				case 'F':
				vpred_ON = 0;
 90c:	10 92 d3 02 	sts	0x02D3, r1
				vpred_OFF = 1;
 910:	81 e0       	ldi	r24, 0x01	; 1
 912:	80 93 e4 02 	sts	0x02E4, r24
				dozadu_ON = 0;
 916:	10 92 e5 02 	sts	0x02E5, r1
				dozadu_OFF = 0;
 91a:	10 92 dd 02 	sts	0x02DD, r1
				kometa_ON = 0;
 91e:	10 92 d4 02 	sts	0x02D4, r1
				kometa_OFF = 0;
 922:	10 92 d0 02 	sts	0x02D0, r1
				vlna_ON = 0;
 926:	10 92 d7 02 	sts	0x02D7, r1
				change = 'G';
 92a:	87 e4       	ldi	r24, 0x47	; 71
 92c:	80 93 d2 02 	sts	0x02D2, r24
				kom_ispeed++;
 930:	80 91 cc 02 	lds	r24, 0x02CC
 934:	8f 5f       	subi	r24, 0xFF	; 255
 936:	80 93 cc 02 	sts	0x02CC, r24
				break;
 93a:	53 c0       	rjmp	.+166    	; 0x9e2 <__stack+0xe3>
				
				case 'G':
				vpred_ON = 1;
 93c:	81 e0       	ldi	r24, 0x01	; 1
 93e:	80 93 d3 02 	sts	0x02D3, r24
				vpred_OFF = 0;
 942:	10 92 e4 02 	sts	0x02E4, r1
				dozadu_ON = 0;
 946:	10 92 e5 02 	sts	0x02E5, r1
				dozadu_OFF = 0;
 94a:	10 92 dd 02 	sts	0x02DD, r1
				kometa_ON = 0;
 94e:	10 92 d4 02 	sts	0x02D4, r1
				kometa_OFF = 0;
 952:	10 92 d0 02 	sts	0x02D0, r1
				vlna_ON = 0;
 956:	10 92 d7 02 	sts	0x02D7, r1
				change = 'H';
 95a:	88 e4       	ldi	r24, 0x48	; 72
 95c:	80 93 d2 02 	sts	0x02D2, r24
				kom_ispeed++;
 960:	80 91 cc 02 	lds	r24, 0x02CC
 964:	8f 5f       	subi	r24, 0xFF	; 255
 966:	80 93 cc 02 	sts	0x02CC, r24
				break;
 96a:	3b c0       	rjmp	.+118    	; 0x9e2 <__stack+0xe3>
				
				case 'H':
				vpred_ON = 0;
 96c:	10 92 d3 02 	sts	0x02D3, r1
				vpred_OFF = 1;
 970:	81 e0       	ldi	r24, 0x01	; 1
 972:	80 93 e4 02 	sts	0x02E4, r24
				dozadu_ON = 0;
 976:	10 92 e5 02 	sts	0x02E5, r1
				dozadu_OFF = 0;
 97a:	10 92 dd 02 	sts	0x02DD, r1
				kometa_ON = 0;
 97e:	10 92 d4 02 	sts	0x02D4, r1
				kometa_OFF = 0;
 982:	10 92 d0 02 	sts	0x02D0, r1
				vlna_ON = 0;
 986:	10 92 d7 02 	sts	0x02D7, r1
				change = 'A';
 98a:	81 e4       	ldi	r24, 0x41	; 65
 98c:	80 93 d2 02 	sts	0x02D2, r24
				kom_ispeed++;
 990:	80 91 cc 02 	lds	r24, 0x02CC
 994:	8f 5f       	subi	r24, 0xFF	; 255
 996:	80 93 cc 02 	sts	0x02CC, r24
				break;
 99a:	23 c0       	rjmp	.+70     	; 0x9e2 <__stack+0xe3>
			}
		}
		
		if (selection == 3 ) //3 - trvale ON
 99c:	83 30       	cpi	r24, 0x03	; 3
 99e:	81 f4       	brne	.+32     	; 0x9c0 <__stack+0xc1>
		{
			vpred_ON = 0;
 9a0:	10 92 d3 02 	sts	0x02D3, r1
			vpred_OFF = 0;
 9a4:	10 92 e4 02 	sts	0x02E4, r1
			dozadu_ON = 0;
 9a8:	10 92 e5 02 	sts	0x02E5, r1
			dozadu_OFF = 0;
 9ac:	10 92 dd 02 	sts	0x02DD, r1
			kometa_ON = 1;
 9b0:	81 e0       	ldi	r24, 0x01	; 1
 9b2:	80 93 d4 02 	sts	0x02D4, r24
			kometa_OFF = 0;
 9b6:	10 92 d0 02 	sts	0x02D0, r1
			vlna_ON = 0;
 9ba:	10 92 d7 02 	sts	0x02D7, r1
 9be:	11 c0       	rjmp	.+34     	; 0x9e2 <__stack+0xe3>
		}

		if (selection == 4 ) //4 - trvale OFF
 9c0:	84 30       	cpi	r24, 0x04	; 4
 9c2:	79 f4       	brne	.+30     	; 0x9e2 <__stack+0xe3>
		{
			vpred_ON = 0;
 9c4:	10 92 d3 02 	sts	0x02D3, r1
			vpred_OFF = 0;
 9c8:	10 92 e4 02 	sts	0x02E4, r1
			dozadu_ON = 0;
 9cc:	10 92 e5 02 	sts	0x02E5, r1
			dozadu_OFF = 0;
 9d0:	10 92 dd 02 	sts	0x02DD, r1
			kometa_ON = 0;
 9d4:	10 92 d4 02 	sts	0x02D4, r1
			kometa_OFF = 1;
 9d8:	81 e0       	ldi	r24, 0x01	; 1
 9da:	80 93 d0 02 	sts	0x02D0, r24
			vlna_ON = 0;
 9de:	10 92 d7 02 	sts	0x02D7, r1
		}
		
		kometa_count = 0;
 9e2:	10 92 c9 02 	sts	0x02C9, r1
 9e6:	10 92 c8 02 	sts	0x02C8, r1
		if (kom_ispeed >= 100)
 9ea:	80 91 cc 02 	lds	r24, 0x02CC
 9ee:	84 36       	cpi	r24, 0x64	; 100
 9f0:	10 f0       	brcs	.+4      	; 0x9f6 <__stack+0xf7>
		{kom_ispeed = 0;
 9f2:	10 92 cc 02 	sts	0x02CC, r1
		}
		sei();
 9f6:	78 94       	sei
 9f8:	08 95       	ret

000009fa <init>:
	}
}

void init(){
	vpred_ON = 0;
 9fa:	10 92 d3 02 	sts	0x02D3, r1
	vpred_OFF = 0;
 9fe:	10 92 e4 02 	sts	0x02E4, r1
	dozadu_ON = 0;
 a02:	10 92 e5 02 	sts	0x02E5, r1
	dozadu_OFF = 0;
 a06:	10 92 dd 02 	sts	0x02DD, r1
	kometa_ON = 0;
 a0a:	10 92 d4 02 	sts	0x02D4, r1
	kometa_OFF = 0;
 a0e:	10 92 d0 02 	sts	0x02D0, r1
	vlna_ON = 0;
 a12:	10 92 d7 02 	sts	0x02D7, r1
	kom_ispeed = 0;
 a16:	10 92 cc 02 	sts	0x02CC, r1
	kometa_count = 0;
 a1a:	10 92 c9 02 	sts	0x02C9, r1
 a1e:	10 92 c8 02 	sts	0x02C8, r1
	change = 'A';
 a22:	81 e4       	ldi	r24, 0x41	; 65
 a24:	80 93 d2 02 	sts	0x02D2, r24
	OCR0A = 0;
 a28:	17 bc       	out	0x27, r1	; 39
	OCR0B = 0;
 a2a:	18 bc       	out	0x28, r1	; 40
	OCR1A = 0;
 a2c:	10 92 89 00 	sts	0x0089, r1
 a30:	10 92 88 00 	sts	0x0088, r1
	OCR1B = 0;
 a34:	10 92 8b 00 	sts	0x008B, r1
 a38:	10 92 8a 00 	sts	0x008A, r1
	OCR2A = 0;
 a3c:	10 92 b3 00 	sts	0x00B3, r1
	OCR2B = 0;
 a40:	10 92 b4 00 	sts	0x00B4, r1
	PWM1 = 0;
 a44:	10 92 e2 02 	sts	0x02E2, r1
	PWM2 = 0;
 a48:	10 92 d5 02 	sts	0x02D5, r1
	PWM3 = 0;
 a4c:	10 92 db 02 	sts	0x02DB, r1
	PWM4 = 0;
 a50:	10 92 d8 02 	sts	0x02D8, r1
	PWM5 = 0;
 a54:	10 92 e0 02 	sts	0x02E0, r1
	PWM6 = 0;
 a58:	10 92 de 02 	sts	0x02DE, r1
	PWMXA = 0;
 a5c:	10 92 d1 02 	sts	0x02D1, r1
	PWMXB = 0;
 a60:	10 92 ce 02 	sts	0x02CE, r1
	duty0A = 0;
 a64:	10 92 e3 02 	sts	0x02E3, r1
	duty0B = 0;
 a68:	10 92 da 02 	sts	0x02DA, r1
	duty1A = 0;
 a6c:	10 92 e1 02 	sts	0x02E1, r1
	duty1B = 0;
 a70:	10 92 df 02 	sts	0x02DF, r1
	duty2A = 0;
 a74:	10 92 d6 02 	sts	0x02D6, r1
	duty2B = 0;
 a78:	10 92 cd 02 	sts	0x02CD, r1
 a7c:	08 95       	ret

00000a7e <main>:
}

int main(void)
{
	// https://sites.google.com/site/qeewiki/books/avr-guide/external-interrupts-on-the-atmega328
	DDRD &= ~(1 << DDD2);     // Clear the PD2 pin
 a7e:	52 98       	cbi	0x0a, 2	; 10
	// PD2 (PCINT0 pin) is now an input

	PORTD |= (1 << PORTD2);    // turn On the Pull-up
 a80:	5a 9a       	sbi	0x0b, 2	; 11
	// PD2 is now an input with pull-up enabled

	//EICRA |= (1 << ISC00) | (1 << ISC01);    // The rising edge of INTx generates an interrupt request
	EICRA |= (1 << ISC01); // The falling edge of INTx generates an interrupt request
 a82:	e9 e6       	ldi	r30, 0x69	; 105
 a84:	f0 e0       	ldi	r31, 0x00	; 0
 a86:	80 81       	ld	r24, Z
 a88:	82 60       	ori	r24, 0x02	; 2
 a8a:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0);     // Turns on INT0
 a8c:	e8 9a       	sbi	0x1d, 0	; 29
	
	sei();                    // turn on interrupts
 a8e:	78 94       	sei
	
	tim0_int();
 a90:	0e 94 5b 00 	call	0xb6	; 0xb6 <tim0_int>
	tim1_int();
 a94:	0e 94 6a 00 	call	0xd4	; 0xd4 <tim1_int>
	tim2_int();
 a98:	0e 94 87 00 	call	0x10e	; 0x10e <tim2_int>
	change = 'A';
 a9c:	81 e4       	ldi	r24, 0x41	; 65
 a9e:	80 93 d2 02 	sts	0x02D2, r24
	selection = 0;
 aa2:	10 92 d9 02 	sts	0x02D9, r1
	
	while (1)
	{
		effekt();
 aa6:	0e 94 98 03 	call	0x730	; 0x730 <effekt>
		kometa_vpred_ON();
 aaa:	0e 94 ce 00 	call	0x19c	; 0x19c <kometa_vpred_ON>
		kometa_vpred_OFF();
 aae:	0e 94 2c 01 	call	0x258	; 0x258 <kometa_vpred_OFF>
		kometa_odzadu_ON();
 ab2:	0e 94 86 01 	call	0x30c	; 0x30c <kometa_odzadu_ON>
		kometa_dozadu_OFF();
 ab6:	0e 94 e5 01 	call	0x3ca	; 0x3ca <kometa_dozadu_OFF>
		kometa_trvale_ON();
 aba:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <kometa_trvale_ON>
		kometa_trvale_OFF();
 abe:	0e 94 83 03 	call	0x706	; 0x706 <kometa_trvale_OFF>
		kometa_vlna();
 ac2:	0e 94 40 02 	call	0x480	; 0x480 <kometa_vlna>
	}
 ac6:	ef cf       	rjmp	.-34     	; 0xaa6 <main+0x28>

00000ac8 <__vector_13>:
}

ISR(TIMER1_OVF_vect){
 ac8:	1f 92       	push	r1
 aca:	0f 92       	push	r0
 acc:	0f b6       	in	r0, 0x3f	; 63
 ace:	0f 92       	push	r0
 ad0:	11 24       	eor	r1, r1
 ad2:	8f 93       	push	r24
 ad4:	9f 93       	push	r25
		
		OVF_update++;
 ad6:	80 91 ca 02 	lds	r24, 0x02CA
 ada:	90 91 cb 02 	lds	r25, 0x02CB
 ade:	01 96       	adiw	r24, 0x01	; 1
 ae0:	90 93 cb 02 	sts	0x02CB, r25
 ae4:	80 93 ca 02 	sts	0x02CA, r24
		
		if (OVF_update >= 30)
 ae8:	4e 97       	sbiw	r24, 0x1e	; 30
 aea:	68 f0       	brcs	.+26     	; 0xb06 <__vector_13+0x3e>
		{
			kometa_count++;
 aec:	80 91 c8 02 	lds	r24, 0x02C8
 af0:	90 91 c9 02 	lds	r25, 0x02C9
 af4:	01 96       	adiw	r24, 0x01	; 1
 af6:	90 93 c9 02 	sts	0x02C9, r25
 afa:	80 93 c8 02 	sts	0x02C8, r24
					
			OVF_update = 0;
 afe:	10 92 cb 02 	sts	0x02CB, r1
 b02:	10 92 ca 02 	sts	0x02CA, r1
		}
}
 b06:	9f 91       	pop	r25
 b08:	8f 91       	pop	r24
 b0a:	0f 90       	pop	r0
 b0c:	0f be       	out	0x3f, r0	; 63
 b0e:	0f 90       	pop	r0
 b10:	1f 90       	pop	r1
 b12:	18 95       	reti

00000b14 <__vector_1>:


ISR (INT0_vect)
{
 b14:	1f 92       	push	r1
 b16:	0f 92       	push	r0
 b18:	0f b6       	in	r0, 0x3f	; 63
 b1a:	0f 92       	push	r0
 b1c:	11 24       	eor	r1, r1
 b1e:	2f 93       	push	r18
 b20:	3f 93       	push	r19
 b22:	4f 93       	push	r20
 b24:	5f 93       	push	r21
 b26:	6f 93       	push	r22
 b28:	7f 93       	push	r23
 b2a:	8f 93       	push	r24
 b2c:	9f 93       	push	r25
 b2e:	af 93       	push	r26
 b30:	bf 93       	push	r27
 b32:	ef 93       	push	r30
 b34:	ff 93       	push	r31
	init();
 b36:	0e 94 fd 04 	call	0x9fa	; 0x9fa <init>
	selection++;
 b3a:	80 91 d9 02 	lds	r24, 0x02D9
 b3e:	8f 5f       	subi	r24, 0xFF	; 255
 b40:	80 93 d9 02 	sts	0x02D9, r24
	if(selection==5)
 b44:	85 30       	cpi	r24, 0x05	; 5
 b46:	19 f4       	brne	.+6      	; 0xb4e <__vector_1+0x3a>
	selection =0;
 b48:	10 92 d9 02 	sts	0x02D9, r1
 b4c:	05 c0       	rjmp	.+10     	; 0xb58 <__vector_1+0x44>
	/// zablokovanie efektu 2
	if(selection==2)
 b4e:	82 30       	cpi	r24, 0x02	; 2
 b50:	19 f4       	brne	.+6      	; 0xb58 <__vector_1+0x44>
	selection =3;
 b52:	83 e0       	ldi	r24, 0x03	; 3
 b54:	80 93 d9 02 	sts	0x02D9, r24
	//0 - vlna
	//1 - efekt zapina sa vpred vypina sa vpred
	//2 - strieda sa ekeft
	//3 - trvale ON
	//4 - trvale OFF
 b58:	ff 91       	pop	r31
 b5a:	ef 91       	pop	r30
 b5c:	bf 91       	pop	r27
 b5e:	af 91       	pop	r26
 b60:	9f 91       	pop	r25
 b62:	8f 91       	pop	r24
 b64:	7f 91       	pop	r23
 b66:	6f 91       	pop	r22
 b68:	5f 91       	pop	r21
 b6a:	4f 91       	pop	r20
 b6c:	3f 91       	pop	r19
 b6e:	2f 91       	pop	r18
 b70:	0f 90       	pop	r0
 b72:	0f be       	out	0x3f, r0	; 63
 b74:	0f 90       	pop	r0
 b76:	1f 90       	pop	r1
 b78:	18 95       	reti

00000b7a <__tablejump2__>:
 b7a:	ee 0f       	add	r30, r30
 b7c:	ff 1f       	adc	r31, r31
 b7e:	05 90       	lpm	r0, Z+
 b80:	f4 91       	lpm	r31, Z
 b82:	e0 2d       	mov	r30, r0
 b84:	09 94       	ijmp

00000b86 <_exit>:
 b86:	f8 94       	cli

00000b88 <__stop_program>:
 b88:	ff cf       	rjmp	.-2      	; 0xb88 <__stop_program>
